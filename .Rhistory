})
lapply(rss_feeds, function(feed) {
print(feed[1])
})
lapply(rss_feeds, function(feed) {
print(feed[, 1])
})
lapply(rss_feeds, function(feed) {
print(feed[, 2])
})
# define target folder where feeds should be saved
target_folder <- paste0("data/raw/study1/rawfeeds/", today)
# define target folder where feeds should be saved
target_folder <- paste0("data/raw/study1/raw_feeds/", today)
# this code loops over each feed, and opens article links in those feeds in a set increment
for (feed in object_names) {
print(paste0("Starting: ", feed))
df <- get(feed) # storing table in empty data frame
increment <- 20 # number of tabs to open
start <- 1 # start index
if (nrow(df) < increment) {
end <- nrow(df)
} else {
end <- increment
}
while (start < nrow(df)) {
sliced <- df %>%
slice(start:end)
lapply(sliced$item_link, browseURL)
readline(prompt = paste0("Press [enter] to load next ", increment, " tabs in ", feed))
start <- start + increment
end <- end + increment
if (end > nrow(df)) {
end <- nrow(df)
print("Last round!")
}
}
}
source('~/Documents/CGSAL/RSVS/scripts/09_study1_datacollection_pt2.R')
source('~/Documents/CGSAL/RSVS/scripts/09_study1_datacollection_pt2.R')
# this code loops over each feed, and opens article links in those feeds in a set increment
for (feed in object_names) {
print(paste0("Starting: ", feed))
df <- get(feed) # storing table in empty data frame
increment <- 20 # number of tabs to open
start <- 1 # start index
if (nrow(df) < increment) {
end <- nrow(df)
} else {
end <- increment
}
while (start < nrow(df)) {
sliced <- df %>%
slice(start:end)
lapply(sliced$item_link, browseURL)
readline(prompt = paste0("Press [enter] to continue."))
start <- start + increment
end <- end + increment
if (end > nrow(df)) {
end <- nrow(df)
print("Last round!")
}
}
}
# this code loops over each feed, and opens article links in those feeds in a set increment
for (feed in object_names) {
print(paste0("Starting: ", feed))
df <- get(feed) # storing table in empty data frame
increment <- 20 # number of tabs to open
start <- 1 # start index
if (nrow(df) < increment) {
end <- nrow(df)
} else {
end <- increment
}
while (start < nrow(df)) {
sliced <- df %>%
slice(start:end)
lapply(sliced$item_link, browseURL)
readline(prompt = paste0("Press [enter] to continue."))
start <- start + increment
end <- end + increment
if (end > nrow(df)) {
end <- nrow(df)
print("Last round!")
}
}
}
source('~/Documents/CGSAL/RSVS/scripts/09_study1_datacollection_pt2.R')
source('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection_pt1.R')
library(dplyr)
library(googlesheets4)
# input Google Sheet
?read_sheet
?write_sheet
ss <- "https://docs.google.com/spreadsheets/d/1vg1N83tw0_s9dcCf7amnF-1NGahtIv1sO9o-grRWXiA/edit#gid=0"
file_list <- list.files("data/raw/study1/raw_feeds/2021-05-04")
file_list <- list.files("data/raw/study1/raw_feeds/2021-05-03")
file_path <- "data/raw/study1/raw_feeds/"
?assign
?write_sheet
?mutate
Sys.date()
Sys.Date()
# start date is in format "YYYY-MM-DD" (unless your system prints dates differently — check your folder names to confirm)
initial_write("2021-05-03")
initial_write <- function(start_date) {
file_list <- list.files(paste0(file_path, start_date), pattern = "*.csv")
lapply(file_list, function(file) {
temp_df <- read.csv(paste0(file_path, start_date, file)) %>%
mutate(collection_date = start_date)
temp_df <- temp_df[c(ncol(temp_df), 1:(ncol(temp_df)-1))] # reordering columns to place year column first
tab_name <- substr(file, 1, nchar(file) - 4) # cutting ".csv" from file name to serve as tab name
write_sheet(temp_df, ss, tab_name) # writing sheet to Google Sheets file
})
}
# start date is in format "YYYY-MM-DD" (unless your system prints dates differently — check your folder names to confirm)
initial_write("2021-05-03")
start_date <- "2021-05-03"
file_list <- list.files(paste0(file_path, start_date), pattern = "*.csv")
lapply(file_list, function(file) {
temp_df <- read.csv(paste0(file_path, start_date, file)) %>%
mutate(collection_date = start_date)
temp_df <- temp_df[c(ncol(temp_df), 1:(ncol(temp_df)-1))] # reordering columns to place year column first
tab_name <- substr(file, 1, nchar(file) - 4) # cutting ".csv" from file name to serve as tab name
write_sheet(temp_df, ss, tab_name) # writing sheet to Google Sheets file
})
lapply(file_list, function(file) {
print(file)
# temp_df <- read.csv(paste0(file_path, start_date, file)) %>%
#   mutate(collection_date = start_date)
# temp_df <- temp_df[c(ncol(temp_df), 1:(ncol(temp_df)-1))] # reordering columns to place year column first
# tab_name <- substr(file, 1, nchar(file) - 4) # cutting ".csv" from file name to serve as tab name
# write_sheet(temp_df, ss, tab_name) # writing sheet to Google Sheets file
})
initial_write <- function(start_date) {
file_list <- list.files(paste0(file_path, start_date), pattern = "*.csv")
lapply(file_list, function(file) {
temp_df <- read.csv(paste0(file_path, start_date, "/", file)) %>%
mutate(collection_date = start_date)
temp_df <- temp_df[c(ncol(temp_df), 1:(ncol(temp_df)-1))] # reordering columns to place year column first
tab_name <- substr(file, 1, nchar(file) - 4) # cutting ".csv" from file name to serve as tab name
write_sheet(temp_df, ss, tab_name) # writing sheet to Google Sheets file
})
}
# start date is in format "YYYY-MM-DD" (unless your system prints dates differently — check your folder names to confirm)
initial_write("2021-05-03")
rlang::last_error()
test <- read.csv(paste0(file_path, start_date, "/propublica.csv"))
test <- test[c(ncol(test), 1:(ncol(test)-1))]
View(test)
test <- read.csv(paste0(file_path, start_date, "/propublica.csv")) %>%
mutate(collection_date = start_date)
test <- test[c(ncol(test), 1:(ncol(test)-1))]
tab_name <- substr(file, 1, nchar(file) - 4)
write_sheet(test, ss, "propublica")
sapply(test, gsub("\\s+"," "))
sapply(test, gsub("\\s+"," ",test))
test <- gsub("\\s+"," ",test)
test <- read.csv(paste0(file_path, start_date, "/propublica.csv")) %>%
mutate(collection_date = start_date)
test <- gsub("\\s+"," ",test)
test <- read.csv(paste0(file_path, start_date, "/propublica.csv")) %>%
mutate(collection_date = start_date)
apply(test, function(x) {
gsub("\\s+"," ", x))
})
apply(test, function(x) {
gsub("\\s+"," ", x)
})
apply(test, 2, function(x) {
gsub("\\s+"," ", x)
})
View(test)
View(test)
test <- test[c(ncol(test), 1:(ncol(test)-1))]
write_sheet(test, ss, "propublica")
ss <- "https://docs.google.com/spreadsheets/d/1vg1N83tw0_s9dcCf7amnF-1NGahtIv1sO9o-grRWXiA/edit#gid=0"
file_path <- "data/raw/study1/raw_feeds/"
start_date <- "2021-05-03"
library(dplyr)
library(googlesheets4)
test <- read.csv(paste0(file_path, start_date, "/propublica.csv")) %>%
mutate(collection_date = start_date)
apply(test, 2, function(x) {
gsub("\\s+"," ", x)
})
test <- test[c(ncol(test), 1:(ncol(test)-1))]
write_sheet(test, ss, "propublica")
test <- apply(test, 2, function(x) {
gsub("\\s+"," ", x)
})
test <- test[c(ncol(test), 1:(ncol(test)-1))]
write_sheet(test, ss, "propublica")
apply(test, 2, function(x) {
gsub("\\s+"," ", x)
})
?apply
test <- read.csv(paste0(file_path, start_date, "/propublica.csv")) %>%
mutate(collection_date = start_date)
apply(test, 2, function(x) {
gsub("\\s+"," ", x)
})
nchar(test$item_description[1])
nchar(test$item_description[2])
nchar(test$item_description[3])
nchar(test$item_description[4])
nchar(test$item_description[5])
nchar(test$item_description[6])
nchar(test$item_description)
nchar(test
)
source('~/Documents/CGSAL/RSVS/scripts/11_study1_datacollection_pt3.R')
?read.csv
file_list <- list.files(paste0(file_path, start_date), pattern = "*.csv")
initial_write <- function(start_date) {
file_list <- list.files(paste0(file_path, start_date), pattern = "*.csv")
lapply(file_list, function(file) {
temp_df <- read.csv(paste0(file_path, start_date, "/", file)) %>%
mutate(collection_date = start_date) %>%
select(-c("item_description"))
row.names(temp_df) <- NULL
temp_df <- temp_df[c(ncol(temp_df), 1:(ncol(temp_df)-1))] # reordering columns to place year column first
tab_name <- substr(file, 1, nchar(file) - 4) # cutting ".csv" from file name to serve as tab name
write_sheet(temp_df, ss, tab_name) # writing sheet to Google Sheets file
})
}
# start date is in format "YYYY-MM-DD" (unless your system prints dates differently — check your folder names to confirm)
initial_write("2021-05-03")
test <- read.csv(paste0(file_path, start_date, "/propublica.csv"))
View(test)
View(test)
source('~/Documents/CGSAL/RSVS/scripts/11_study1_datacollection_pt3.R')
df <- read_sheet(ss) # reading in Google Sheet
df <- read_sheet(ss, sheet = 1) # reading in Google Sheet
collected_dates <- unique(df$collection_date)
all_dates <- list.files(file_path)
todo_dates <- !(all_dates %in% uploaded_dates)
uploaded_dates <- unique(df$collection_date) # creating character vector of all dates that have been uploaded
todo_dates <- !(all_dates %in% uploaded_dates)
todo_dates <- all_dates[!(all_dates %in% uploaded_dates)]
?append_sheet
source('~/Documents/CGSAL/RSVS/scripts/11_study1_datacollection_pt3.R')
source('~/Documents/CGSAL/RSVS/scripts/10_study1_datacollection_pt2_v2.R')
source('~/Documents/CGSAL/RSVS/scripts/10_study1_datacollection_pt2_v2.R')
source('~/Documents/CGSAL/RSVS/scripts/10_study1_datacollection_pt2_v2.R')
browse <- function(sheet_name, increment = 20) {
df <- read_sheet(ss, sheet = sheet_name)
start <- 1
end <- increment
while (start < nrow(df)) {
sliced <- df %>%
slice(start:end)
lapply(sliced$item_link, browseURL)
if (end < nrow(df)) {
readline(prompt = paste0("Press [enter] to open articles ", start, "-", end, " ."))
}
start <- start + increment
if (end + increment > nrow(df)) {
end <- nrow(df)
print("Last round!")
} else {
end <- end + increment
}
}
}
browse("bbc_topstories")
while (start < nrow(df)) {
sliced <- df %>%
slice(start:end)
lapply(sliced$item_link, browseURL)
if (end < nrow(df)) {
readline(prompt = paste0("Press [enter] to open articles ", start + increment, "-", end + increment, "."))
} else if (end == nrow(df)) {
print("No more rows left!")
}
start <- start + increment
if (end + increment > nrow(df)) {
end <- nrow(df)
} else {
end <- end + increment
}
}
}
browse <- function(sheet_name, increment = 20) {
df <- read_sheet(ss, sheet = sheet_name)
start <- 1
end <- increment
while (start < nrow(df)) {
sliced <- df %>%
slice(start:end)
lapply(sliced$item_link, browseURL)
if (end < nrow(df)) {
readline(prompt = paste0("Press [enter] to open articles ", start + increment, "-", end + increment, "."))
} else if (end == nrow(df)) {
print("No more rows left!")
}
start <- start + increment
if (end + increment > nrow(df)) {
end <- nrow(df)
} else {
end <- end + increment
}
}
}
browse("bbc_topstories")
browse <- function(sheet_name, increment = 20) {
df <- read_sheet(ss, sheet = sheet_name)
start <- 1
end <- increment
while (start < nrow(df)) {
sliced <- df %>%
slice(start:end)
lapply(sliced$item_link, browseURL)
if (end + increment < nrow(df)) {
readline(prompt = paste0("Press [enter] to open articles ", start + increment, "-", end + increment, "."))
} else if (end == nrow(df)) {
print("No more rows left!")
} else {
readline(prompt = paste0("Press [enter] to open articles ", start + increment, "-", nrow(df), "."))
}
start <- start + increment
if (end + increment > nrow(df)) {
end <- nrow(df)
} else {
end <- end + increment
}
}
}
browse("bbc_topstories")
browse <- function(sheet_name, increment = 20) {
df <- read_sheet(ss, sheet = sheet_name)
start <- 1
end <- increment
while (start < nrow(df)) {
sliced <- df %>%
slice(start:end)
lapply(sliced$item_link, browseURL)
if (end + increment < nrow(df)) {
readline(prompt = paste0("Press [enter] to open articles ", start + increment, "-", end + increment, "."))
} else {
readline(prompt = paste0("Press [enter] to open articles ", start + increment, "-", nrow(df), ". —— LAST ROUND"))
}
start <- start + increment
if (end + increment > nrow(df)) {
end <- nrow(df)
} else {
end <- end + increment
}
}
}
browse("bbc_topstories")
browse <- function(sheet_name, increment = 20) {
df <- read_sheet(ss, sheet = sheet_name)
start <- 1
end <- increment
while (start < nrow(df)) {
sliced <- df %>%
slice(start:end)
lapply(sliced$item_link, browseURL)
# if (end + increment < nrow(df)) {
#   readline(prompt = paste0("Press [enter] to open articles ", start + increment, "-", end + increment, "."))
# } else if (end == nrow(df)){
#   readline(prompt = paste0("Press [enter] to open articles ", start + increment, "-", nrow(df), ". —— LAST ROUND"))
# }
start <- start + increment
if (end + increment > nrow(df)) {
end <- nrow(df)
} else {
end <- end + increment
}
if (start < nrow(df)) {
if (end < nrow(df)) {
readline(prompt = paste0("Press [enter] to open articles ", start, "-", end, "."))
} else if (end == nrow(df)){
readline(prompt = paste0("Press [enter] to open articles ", start + increment, "-", nrow(df), ". —— LAST ROUND"))
}
} else {
print("No more rows!")
}
}
}
browse("bbc_topstories")
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
source('~/Documents/CGSAL/RSVS/scripts/09_study1_dataupload.R')
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
source('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
source('~/Documents/CGSAL/RSVS/scripts/09_study1_dataupload.R')
wp_us <- read.csv("data/raw/study1/raw_feeds/2021-05-07/wapo_us.csv")
wp_world <- read.csv("data/raw/study1/raw_feeds/2021-05-07/wapo_world.csv")
wp_us <- wp_us %>%
mutate(collection_date = Sys.Date()) %>%
select(-c("item_description", "X"))
wp_us <- wp_us[c(ncol(wp_us), 1:(ncol(temp_df)-1))]
wp_us <- wp_us[c(ncol(wp_us), 1:(ncol(wp_col)-1))]
wp_us <- wp_us[c(ncol(wp_us), 1:(ncol(wp_us)-1))]
sheet_append(ss, wp_us, "wapo_us")
sheet_append(ss, wp_us, "wapo_us")
wp_world <- wp_world %>%
mutate(collection_date = Sys.Date()) %>%
select(-c("item_description", "X"))
wp_world <- wp_world[c(ncol(wp_world), 1:(ncol(wp_world)-1))]
sheet_append(ss, wp_world, "wapo_world")
source('~/Documents/CGSAL/RSVS/scripts/09_study1_dataupload.R')
source('~/Documents/CGSAL/RSVS/scripts/09_study1_dataupload.R')
source('~/Documents/CGSAL/RSVS/scripts/09_study1_dataupload.R')
source('~/Documents/CGSAL/RSVS/scripts/09_study1_dataupload.R')
?one_of
warnings()
## STUDY 1 DATA COLLECTION SCRIPT: PART 2 ##
# transfer locally-stored CSVs created in Part 1 to aggregated Google Sheets document
# This script can be run all at once (Cmd + Shift + S). If this is the first transferring of data to Google Sheets, uncomment line 33 to do an initial writing of data to Google Sheets. Otherwise, LEAVE THIS LINE COMMENTED OUT. Read comments throughout script — hopefully thought process will be clear.
library(dplyr) # for tidying data
library(googlesheets4) # for interfacing with Google Sheets
ss <- "https://docs.google.com/spreadsheets/d/1lwdyAEsbFCGii90SvWQss-EY06xl2uMP5jxTAdT_fSY/edit#gid=0" # link to Google Sheet
file_path <- "data/raw/study1/raw_feeds/" # file path containing raw feds
start_date <- "2021-05-03" # data collection start date ——— CHANGE THIS FOR REAL DATA COLLECTION DATE
# start date is in format "YYYY-MM-DD" (unless your system prints dates differently — check your folder names to confirm)
# Defining a function to write the first day of data into Google Sheet — this is done to create a "base" table with all the correct columns on which to append future days of data. Function only needs to be run once.
initial_write <- function(start_date) {
file_list <- list.files(paste0(file_path, start_date), pattern = "*.csv") # create character vector of file names in local directory
# loop that goes over files in local directory and writes a new google sheet for each table
lapply(file_list, function(file) {
temp_df <- read.csv(paste0(file_path, start_date, "/", file)) %>% # read in CSV into R environment
mutate(collection_date = start_date) %>% # add data collection date column
select(any_of(c("collection_date", "feed_title", "feed_pub_date", "feed_last_build_date", "item_title", "item_link", "item_pub_date"))) # select relevant columns
temp_df <- temp_df[c(ncol(temp_df), 1:(ncol(temp_df)-1))] # reordering columns to place year column first
tab_name <- substr(file, 1, nchar(file) - 4) # cutting ".csv" from file name to serve as tab name
write_sheet(temp_df, ss, tab_name) # writing sheet to Google Sheets file
})
}
# RUN THIS NEXT LINE OF CODE ONLY ONE TIME WHEN FIRST TRANSFERRING DATA TO GOOGLE SHEETS— if run again, tables on Google Sheets will be overwritten (I commented it out for safety)
initial_write(start_date)
source('~/Documents/CGSAL/RSVS/scripts/09_study1_dataupload.R')
?tryCatch
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
source('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
debugSource('~/Documents/CGSAL/RSVS/scripts/08_study1_datacollection.R')
rss_feeds$rss["wapo_world"]
rss_feeds$rss[rss_feeds$name == "wapo_world"]
missing_feeds <- c("wapo_world")
for (feed in missing_feeds) {
temp_df <- tidyfeed(rss_feeds$rss[rss_feeds$name == feed]) %>%
select(-c("item_category"))
write.csv(paste0(target_folder, "/", feed, ".csv"))
}
# storing Google Sheet URL containing RSS feeds
ss <- "https://docs.google.com/spreadsheets/d/1YH1gRthVQjP33tTPxp4PAxlZSqzjfMo3b2-k2PjGqpM/edit?usp=sharing"
rss_feeds <- read_sheet(ss) # reading in sheet
for (feed in missing_feeds) {
temp_df <- tidyfeed(rss_feeds$rss[rss_feeds$name == feed]) %>%
select(-c("item_category"))
write.csv(paste0(target_folder, "/", feed, ".csv"))
}
for (feed in missing_feeds) {
temp_df <- tidyfeed(rss_feeds$rss[rss_feeds$name == feed]) %>%
select(-c("item_category"))
write.csv(paste0(target_folder, "/", feed, ".csv"))
}
for (feed in missing_feeds) {
temp_df <- tidyfeed(rss_feeds$rss[rss_feeds$name == feed]) %>%
select(-c("item_category"))
write.csv(paste0(target_folder, "/", feed, ".csv"))
}
for (feed in missing_feeds) {
temp_df <- tidyfeed(rss_feeds$rss[rss_feeds$name == feed]) %>%
select(-c("item_category"))
write.csv(temp_df, paste0(target_folder, "/", feed, ".csv"))
}
for (feed in missing_feeds) {
temp_df <- tidyfeed(rss_feeds$rss[rss_feeds$name == feed]) %>%
select(-c("item_category"))
write.csv(temp_df, paste0(target_folder, "/", feed, ".csv"))
}
missing_feeds <- c("wapo_us")
for (feed in missing_feeds) {
temp_df <- tidyfeed(rss_feeds$rss[rss_feeds$name == feed]) %>%
select(-c("item_category"))
write.csv(temp_df, paste0(target_folder, "/", feed, ".csv"))
}
missing_feeds <- c("wapo_us", "wapo_world")
for (feed in missing_feeds) {
temp_df <- tidyfeed(rss_feeds$rss[rss_feeds$name == feed]) %>%
select(-c("item_category"))
write.csv(temp_df, paste0(target_folder, "/", feed, ".csv"))
}
for (feed in missing_feeds) {
temp_df <- tidyfeed(rss_feeds$rss[rss_feeds$name == feed]) %>%
select(-c("item_category"))
write.csv(temp_df, paste0(target_folder, "/", feed, ".csv"))
}
missing_feed <- "wapo_world"
temp_df <- tidyfeed(rss_feeds$rss[rss_feeds$name == missing_feed]) %>%
select(-c("item_category"))
write.csv(temp_df, paste0(target_folder, "/", missing_feed, ".csv"))
browse("wapo_world")
source('~/Documents/CGSAL/RSVS/scripts/10_study1_browseropen_gs.R')
source('~/Documents/CGSAL/RSVS/scripts/10_study1_browseropen_gs.R')
browse("wapo_us")
source('~/Documents/CGSAL/RSVS/scripts/10_study1_browseropen_gs.R')
source('~/Documents/CGSAL/RSVS/scripts/10_study1_browseropen_gs.R')
source('~/Documents/CGSAL/RSVS/scripts/10_study1_browseropen_gs.R')
source('~/Documents/CGSAL/RSVS/scripts/10_study1_browseropen_gs.R')
